"""add provider model support

Revision ID: 16fa53d9faec
Revises: 8d2d099ceb74
Create Date: 2023-08-06 16:57:51.248337

"""
import sqlalchemy as sa
from alembic import op

from core import sqltype
from core.sqltype import UUID

# revision identifiers, used by Alembic.
revision = '16fa53d9faec'
down_revision = '8d2d099ceb74'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('provider_models',
                    sa.Column('id', UUID(), nullable=False, comment='ID'),
                    sa.Column('tenant_id', UUID(), nullable=False, comment='租户ID'),
                    sa.Column('provider_name', sa.String(length=40), nullable=False, comment='提供方名字'),
                    sa.Column('model_name', sa.String(length=40), nullable=False, comment='模型名'),
                    sa.Column('model_type', sa.String(length=40), nullable=False, comment='模型类型'),
                    sa.Column('encrypted_config', sa.String(length=4096), nullable=True,
                              server_default=sqltype.empty_text(),
                              comment='加密配置'),
                    sa.Column('is_valid', sa.Boolean(), server_default=sa.text('false'), nullable=False,
                              comment='是否有效'),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'),
                              nullable=False, comment='创建时间'),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'),
                              nullable=False, comment='更新时间'),
                    sa.PrimaryKeyConstraint('id', name='provider_model_pkey'),
                    sa.UniqueConstraint('tenant_id', 'provider_name', 'model_name', 'model_type',
                                        name='unq_provider_model_name')
                    )
    with op.batch_alter_table('provider_models', schema=None) as batch_op:
        batch_op.create_index('idx_provider_model_tenant_id_provider', ['tenant_id', 'provider_name'], unique=False)

    op.create_table('tenant_default_models',
                    sa.Column('id', UUID(), nullable=False, comment='ID'),
                    sa.Column('tenant_id', UUID(), nullable=False, comment='租户ID'),
                    sa.Column('provider_name', sa.String(length=40), nullable=False, comment='提供方名字'),
                    sa.Column('model_name', sa.String(length=40), nullable=False, comment='模型名称'),
                    sa.Column('model_type', sa.String(length=40), nullable=False, comment='模型类型'),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'),
                              nullable=False, comment='创建时间'),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'),
                              nullable=False, comment='更新时间'),
                    sa.PrimaryKeyConstraint('id', name='tenant_default_model_pkey')
                    )
    with op.batch_alter_table('tenant_default_models', schema=None) as batch_op:
        batch_op.create_index('idx_tenant_default_model_tenant_id_provider_type',
                              ['tenant_id', 'provider_name', 'model_type'], unique=False)

    op.create_table('tenant_preferred_model_providers',
                    sa.Column('id', UUID(), nullable=False, comment='ID'),
                    sa.Column('tenant_id', UUID(), nullable=False, comment='租户ID'),
                    sa.Column('provider_name', sa.String(length=40), nullable=False, comment='提供方名称'),
                    sa.Column('preferred_provider_type', sa.String(length=40), nullable=False,
                              comment='首选提供方类型'),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'),
                              nullable=False, comment='创建时间'),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP(0)'),
                              nullable=False, comment='更新时间'),
                    sa.PrimaryKeyConstraint('id', name='tenant_preferred_model_provider_pkey')
                    )
    with op.batch_alter_table('tenant_preferred_model_providers', schema=None) as batch_op:
        batch_op.create_index('idx_tenant_preferred_model_provider_tenant_provider', ['tenant_id', 'provider_name'],
                              unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tenant_preferred_model_providers', schema=None) as batch_op:
        batch_op.drop_index('idx_tenant_preferred_model_provider_tenant_provider')

    op.drop_table('tenant_preferred_model_providers')
    with op.batch_alter_table('tenant_default_models', schema=None) as batch_op:
        batch_op.drop_index('idx_tenant_default_model_tenant_id_provider_type')

    op.drop_table('tenant_default_models')
    with op.batch_alter_table('provider_models', schema=None) as batch_op:
        batch_op.drop_index('idx_provider_model_tenant_id_provider')

    op.drop_table('provider_models')
    # ### end Alembic commands ###
